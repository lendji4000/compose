<?php

/**
 * EiTreeOpenedByTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiTreeOpenedByTable extends Doctrine_Table
{
    public static $tabIds="";
    /**
     * Returns an instance of this class.
     *
     * @return object EiTreeOpenedByTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiTreeOpenedBy');
    }
    
    public function getOpenedNodes($user, $project_id, $project_ref){
        return self::getInstance()->createQuery('opened')
                ->leftJoin('opened.EiTree p')
                ->where('opened.user_id = ?', $user->getUserId())
                ->andWhere('opened.ref_id = ?', $user->getRefId())
                ->andWhere('p.project_id = ?', $project_id)
                ->andWhere('p.project_ref = ?', $project_ref)
                ->execute();
    }
    
    /**
     * Ferme le noeud $node_id de l'utilisateur $user. (suppression de la relation)
     * 
     * @param type $node_id
     * @param type $user
     */
    public function closeNode($node_id, $user, Doctrine_Connection $conn = null){
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        $user_id=$user->getUserId();
        $user_ref=$user->getRefId();
        self::$tabIds="";
         $tabIds=self::closeNodes($node_id, $user_id,$user_ref,self::$tabIds, $conn);
         if(self::$tabIds!=""):
             $conn->execute("delete from  ei_tree_opened_by where user_id=". $user_id." and ref_id=".$user_ref." and ei_tree_id IN (".substr(self::$tabIds,0,  strlen(self::$tabIds)-1).")"); 
         endif; 
    }
    /* Fonction de fermeture reccursive des neouds de fonctions */
    public static function closeNodes($node_id, $user_id,$user_ref,$tab, Doctrine_Connection $conn = null){
        if ($conn == null)
            $conn = Doctrine_Manager::connection();

//        $opened = Doctrine_Core::getTable('EiTreeOpenedBy')
//                ->findOneByUserIdAndRefIdAndEiTreeId($user->getUserId(), $user->getRefId(), $node_id);
        //$opened=$conn->fetchOne("select ei_tree_id from ei_tree_opened_by where user_id=" . $user_id." and ref_id=".$user_ref." and ei_tree_id=".$node_id); 
        /* Recherche de tous les noeuds enfants du noeud Ã  fermer */
        //if ($opened):  
            //$conn->execute("delete from  ei_tree_opened_by where user_id=". $user_id." and ref_id=".$user_ref." and ei_tree_id=".$node_id); 
            self::$tabIds.=$node_id.",";
        //endif;
        $childs = $conn->fetchAll("select id from ei_tree where root_id=" . $node_id); 
        
        if (count($childs)>0):
            foreach ($childs as $child):
                self::closeNodes($child['id'], $user_id,$user_ref,self::$tabIds, $conn);
            endforeach;
        endif;
        
    }
}