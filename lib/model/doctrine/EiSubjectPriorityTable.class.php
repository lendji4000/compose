<?php

/**
 * EiSubjectPriorityTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiSubjectPriorityTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiSubjectPriorityTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiSubjectPriority');
    }
    //Récupération de la requête pour les priorité de sujet d'un projet
    public function getSubjectPriorityForProjectQuery($project_id, $project_ref,Doctrine_Connection $conn=null){
       if($conn==null) $conn = Doctrine_Manager::connection(); 
        return $conn->createQuery()->from('EiSubjectPriority')
             ->where('project_id= ? And project_ref=? ',
                     array($project_id,$project_ref)) ;
    }
    
    //Création des priorités de sujet par défaut  s'ils n'existent pas encore
    public function createDefaultSubjectPriorities($project_id, $project_ref,$conn){
        if($conn==null) $conn = Doctrine_Manager::connection(); 
        
        $priorities=$this->getSubjectPriorityForProjectQuery($project_id, $project_ref,$conn)->execute();
        
        if(count($priorities)==0){  // Alors aucune priorité n'existe et dans ce cas on crée ceux par défaut
          $this->createPriority($project_id, $project_ref, 'Low',"#E8DC0D",$conn) ;
          $this->createPriority($project_id, $project_ref, 'Medium',"#E8A10D",$conn) ;
          $this->createPriority($project_id, $project_ref, 'High',"#E81E0D",$conn) ;
          $this->createPriority($project_id, $project_ref, 'Blocking',"#FF340D",$conn) ;
          return 1;
        }
       return 0;     
    }
    
    //Création d'une priorité de sujet pour un projet donné
    public function createPriority($project_id, $project_ref,$priority,$color_code,$conn){
        if($conn==null) $conn = Doctrine_Manager::connection();
        $conn->insert($this->getInstance(),
                array('name'=>$priority,
                      'color_code' => $color_code,  
                      'project_id' =>$project_id,
                      'project_ref' => $project_ref,
                      'created_at'=> date('Y-m-d H:i:s'),
                      'updated_at' => date('Y-m-d H:i:s')));
    }
    /* Récupération de la liste déroulante des priorités de sujet pour la recherche */
    public function getSubjectPriorityForSearchBox(EiProjet $ei_project,  Doctrine_Connection $conn=null){
        if($conn==null) $conn = Doctrine_Manager::connection(); 
        //On crèe les priorité par défaut du projet si ces dernières n'existent pas encore
        $this->createDefaultSubjectPriorities($ei_project->getProjectId(), $ei_project->getRefId(), $conn);
        //On récupère les priorités du projet
         return $this->getSubjectPriorityForProjectQuery($ei_project->getProjectId(), $ei_project->getRefId(),$conn)->execute(); 
    }
    
}