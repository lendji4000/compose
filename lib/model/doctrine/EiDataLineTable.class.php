<?php

/**
 * EiDataLineTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiDataLineTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiDataLineTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiDataLine');
    }
    
    public function getEiDataLineRoot($ei_data_set_id){
        /** @var Doctrine_Query $query */
        $query = self::getInstance()->createQuery('dl')
            ->leftJoin('dl.EiDataSetStructure scr')
            ->where('dl.ei_data_set_id = ?', $ei_data_set_id)
            ->andWhere("dl.level = 0");

        return $query->execute()->getFirst();
    }
    
    public function countEiDataLineBlocks($ei_data_line_root_id){
        $req = self::getInstance()->createQuery('dl')
                ->select('count(dl.id) as nb')
                ->where('dl.ei_data_line_parent_id = ?', $ei_data_line_root_id)
                ->andWhere('dl.valeur IS NULL')
                ->fetchArray();
        
        return $req[0]['nb'];
    }

    /**
     * @updated 21/10/2014
     * @param $ei_data_line_id
     * @return mixed
     */
    public function getEiDataLineBlocks($ei_data_line_id)
    {
        $req = self::getInstance()->createQuery('dl')
                ->leftJoin('dl.EiDataSetStructure scr')
                ->where('dl.ei_data_line_parent_id = ?', $ei_data_line_id)
                ->andWhere("scr.type = '".EiDataSetStructure::$TYPE_NODE."'");
        //throw new Exception($req->getSqlQuery());
        return $req;
    }
    
    public function getEiDataLineParameters($ei_data_line_id){
        return self::getInstance()->createQuery('dl')
                ->leftJoin('dl.EiDataSetStructure scr')
                ->where('dl.ei_data_line_parent_id = ?', $ei_data_line_id)
                ->andWhere("scr.type = '".EiDataSetStructure::$TYPE_LEAF."'")
                ->execute();
    }
    
    
    public function getChildrenAndEiScenarioStructures($ei_data_line_id){
        /** @var Doctrine_Query $query */
        $query = self::getInstance()->createQuery('dl')
                ->leftJoin('dl.EiDataSetStructure')
                ->where('dl.ei_data_line_parent_id = ? ', $ei_data_line_id)
        ;

        return $query->execute();
    }

    /**
     * @param $dataLine
     * @param Doctrine_Connection $conn
     * @return int|null
     */
    public function insertDataLineFromTab($dataLine,  Doctrine_Connection $conn = null)
    {
        if($conn==null) $conn = Doctrine_Manager::connection();

        $stmt = $conn->prepare("INSERT INTO ei_data_line (ei_data_set_id, ei_data_set_structure_id, valeur, root_id, lft, rgt, level, created_at,updated_at) "
            ."VALUES (:dataset_id, :structure_id, :value,:root_id,:lft,:rgt,:level,NOW(),NOW()) ");

        $stmt->bindValue("dataset_id", $dataLine['dataset_id']);
        $stmt->bindValue("structure_id", $dataLine['structure_id']);
        $stmt->bindValue("value", $dataLine['value']);
        $stmt->bindValue("root_id", $dataLine['root_id']);
        $stmt->bindValue("lft", $dataLine['lft']);
        $stmt->bindValue("rgt", $dataLine['rgt']);
        $stmt->bindValue("level", $dataLine['level']);
        $stmt->execute(array());

        return 1;
    }

    /**
     * @param $dataLine
     * @param Doctrine_Connection $conn
     * @return int|null
     */
    public function insertDataLinesFromTab($dataLines, $rootId, $dataSetId, Doctrine_Connection $conn = null)
    {
        if($conn==null) $conn = Doctrine_Manager::connection();

        $stmt = $conn->prepare('INSERT INTO ei_data_line (ei_data_set_id, ei_data_set_structure_id, valeur, root_id, lft, rgt, level, created_at,updated_at) VALUES (:dataset_id, :structure_id, :value,:root_id,:lft,:rgt,:level,NOW(),NOW())');

        foreach( $dataLines as $dataLine ){
            $stmt->bindValue('dataset_id', $dataSetId);
            $stmt->bindValue('structure_id', $dataLine['structure_id']);
            $stmt->bindValue('value', $dataLine['value']);
            $stmt->bindValue('root_id', $rootId);
            $stmt->bindValue('lft', $dataLine['lft']);
            $stmt->bindValue('rgt', $dataLine['rgt']);
            $stmt->bindValue('level', $dataLine['level']);

            $stmt->execute(array());
        }

        return 1;
    }

    /**
     * @param $dataLines
     * @param $rootId
     * @param $dataSetId
     * @param Doctrine_Connection $conn
     * @return int
     */
    public function updateDataLinesFromTab($dataLines, $rootId, $dataSetId, Doctrine_Connection $conn = null)
    {
        if($conn==null) $conn = Doctrine_Manager::connection();

        $stmt = $conn->prepare('UPDATE ei_data_line SET ei_data_set_structure_id = :structure_id, root_id = :root_id, lft = :lft, rgt = :rgt WHERE ei_data_set_id = :dataset_id AND id = :id');

        foreach( $dataLines as $dataLine ){
            $stmt->bindValue('dataset_id', $dataSetId);
            $stmt->bindValue('structure_id', $dataLine['structure_id']);
            $stmt->bindValue('root_id', $rootId);
            $stmt->bindValue('lft', $dataLine['lft']);
            $stmt->bindValue('rgt', $dataLine['rgt']);
            $stmt->bindValue('id', $dataLine['id']);

            $stmt->execute(array());
        }

        return 1;
    }
}