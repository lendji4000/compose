<?php

/**
 * EiCampaign
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kalifastRobot
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EiCampaign extends BaseEiCampaign
{
    public function __construct($table = null, $isNewEntry = false, EiProjet $ei_project=null) {
         
        parent::__construct($table, $isNewEntry);
        if($ei_project!=null) $this->setProject ($ei_project); 
       
    } 
    /* Setter projet pour la campagne */
    public function setProject(EiProjet $ei_project){
        $this->setProjectId($ei_project->getProjectId());
        $this->setProjectRef($ei_project->getRefId());
    }
    /* getter projet pour la campagne */
    public function getEiProject() {
        return Doctrine_Core::getTable('EiProjet')->findOneByProjectIdAndRefId(
                        $this->getProjectId(), $this->getProjectRef());
    }
    
    public function __toString() {
        return sprintf('%s', $this->getName());
    }
    public function getCoverageAsString(){
        if($this->getCoverage()==null) return '0 %';
        else return $this->getCoverage().' %'; 
    }
    public function save(\Doctrine_Connection $conn = null) {
        if(intval($this->getCoverage())<0) $this->setCoverage (0);
        if(intval($this->getCoverage())>100) $this->setCoverage (100);
        parent::save($conn);
    }
    public function getRootCampaign(){
        return $this->getTable()->getRootCampaign($this);
    }
      /**
     * Retourne le nom de la campagne raccourci.
     * @param int $size la taille totale de la chaine à retourner.
     * @return string
     * @throws InvalidArgumentException
     */
    public function getTroncatedName($size = 17) {
        
        if($size <= 0)
            throw new InvalidArgumentException('Invalid size value to troncate campaign name. '. $size . ' is not a valid value.');
        
        $name = $this->getName();
        if (strlen($name) > $size):
            return substr($name, 0, $size-3) . '...';
        else:
            return $name;
        endif;
         
    }
    /**
     * Retourne le nom de la campagne raccourci.
     * @param int $size la taille totale de la chaine à retourner.
     * @return string
     * @throws InvalidArgumentException
     */
    public function getTroncatedDescription($size = 55) {
        
        if($size <= 0)
            throw new InvalidArgumentException('Invalid size value to troncate description name. '. $size . ' is not a valid value.');
        
        $description = $this->getDescription();
        if (strlen($description) > $size):
            return substr($description, 0, $size-3) . '...';
        else:
            return $description;
        endif;
         
    }

    /**/
    public function setNewOnErrorValue($block_type_id, Doctrine_Connection $conn = null){
        if ($conn == null) $conn = Doctrine_Manager::connection();
        if($this->getId()==null) return false;
        return $this->getTable()->setNewOnErrorValue($block_type_id,$this->getId(),$conn);
    }
}
