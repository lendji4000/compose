<?php

/**
 * ScriptEiNoticeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiNoticeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiNoticeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScriptEiNotice');
    }
    
    public function insertTmpData($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_notice");

        $items = $projets->getElementsByTagName("ei_notices");
        if ($items->length !=0) {//ya t-il des éléments à traiter?
            $ei_notices = $items->item(0)->getElementsByTagName("ei_notice");
            $stmt = $conn->prepare("INSERT INTO script_ei_notice (notice_id, notice_ref,function_id,function_ref,name) "
                            ."VALUES (:notice_id, :notice_ref,:function_id,:function_ref,:name) "
                            ."ON DUPLICATE KEY UPDATE notice_id=notice_id,notice_ref=notice_ref  ");
            
            if($ei_notices->length !=0){
            foreach ($ei_notices as $ei_notice) {

                $notice_id = $ei_notice->getAttribute("notice_id");
                $notice_ref = $ei_notice->getAttribute("notice_ref");
                //recherche du profil en base
                if ($notice_id != null && $notice_ref != null) { 
                    $stmt->bindValue("notice_id", $notice_id);
                        $stmt->bindValue("notice_ref", $notice_ref);
                        $stmt->bindValue("function_id", $ei_notice->getElementsByTagName("function_id")->item(0)->nodeValue);
                        $stmt->bindValue("function_ref", $ei_notice->getElementsByTagName("function_ref")->item(0)->nodeValue);  
                        $stmt->bindValue("name",$ei_notice->getElementsByTagName("name")->item(0)->nodeValue);  
                        $stmt->execute(array());   
 
                }
            } 
            }
        }
        return null;
    }
}