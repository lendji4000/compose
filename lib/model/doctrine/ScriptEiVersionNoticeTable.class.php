<?php

/**
 * ScriptEiVersionNoticeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiVersionNoticeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiVersionNoticeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScriptEiVersionNotice');
    }
    
    
    public function insertTmpData($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_version_notice");

        $items = $projets->getElementsByTagName("ei_version_notices");
        if ($items->length !=0) {//ya t-il des éléments à traiter?
            $ei_version_notices = $items->item(0)->getElementsByTagName("ei_version_notice");
            $stmt = $conn->prepare("INSERT INTO script_ei_version_notice (notice_id, notice_ref, version_notice_id,lang,description,expected,result,name,is_active) "
                            ."VALUES (:notice_id, :notice_ref, :version_notice_id,:lang,:description,:expected,:result,:name,:is_active) "
                            ."ON DUPLICATE KEY UPDATE notice_id=notice_id,notice_ref=notice_ref ,version_notice_id=version_notice_id, lang=lang ");

            if($ei_version_notices->length !=0){
            foreach ($ei_version_notices as $ei_version_notice) {

                $notice_id = $ei_version_notice->getAttribute("notice_id");
                $notice_ref = $ei_version_notice->getAttribute("notice_ref");
                $version_notice_id = $ei_version_notice->getAttribute("version_notice_id");
                $lang = $ei_version_notice->getAttribute("lang");
                //recherche du profil en base
                if ($notice_id != null && $notice_ref != null && $version_notice_id!=null && $lang!=null ) { 
                    $stmt->bindValue("notice_id", $notice_id);
                        $stmt->bindValue("notice_ref", $notice_ref);
                        $stmt->bindValue("version_notice_id", $version_notice_id);
                        $stmt->bindValue("lang", $lang);  
                        $stmt->bindValue("description",$ei_version_notice->getElementsByTagName("description")->item(0)->nodeValue); 
                        $stmt->bindValue("expected",$ei_version_notice->getElementsByTagName("expected")->item(0)->nodeValue); 
                        $stmt->bindValue("result",$ei_version_notice->getElementsByTagName("result")->item(0)->nodeValue); 
                        $stmt->bindValue("name",$ei_version_notice->getElementsByTagName("name")->item(0)->nodeValue); 
                        $stmt->bindValue("is_active",$ei_version_notice->getElementsByTagName("is_active")->item(0)->nodeValue); 
                        $stmt->execute(array());  
                }
            } 
            }
        }
        return null;
    }
     
}