<?php

/**
 * ScriptEiViewTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiViewTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiViewTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScriptEiView');
    }
    //Avec l'objet conn pour pouvoir intégrer la fonction à une transaction
    //Réchargement des données ScriptEiView

    public function insertTmpData($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_view");

        $items = $projets->getElementsByTagName("ei_views");
        if ($items->length !=0) {//ya t-il des éléments à traiter?
            $stmt = $conn->prepare("INSERT INTO script_ei_view (view_ref, view_id, project_ref,project_id,description,is_active) "
                            ."VALUES (:view_ref, :view_id, :project_ref,:project_id,:description,:is_active) "
                            ."ON DUPLICATE KEY UPDATE view_ref=view_ref,view_id=view_id  ");
            $ei_views = $items->item(0)->getElementsByTagName("ei_view");

            if($ei_views->length !=0){
            //Création de la collection d'objets à ajouter dans la table temporaire de paramètres
            foreach ($ei_views as $ei_view) {

                $view_id = $ei_view->getAttribute("view_id");
                $view_ref = $ei_view->getAttribute("view_ref");
                //recherche de la vue en base
                if ($view_id != null && $view_ref!= null) { 
                        $stmt->bindValue("view_ref", $view_ref);
                        $stmt->bindValue("view_id", $view_id);
                        $stmt->bindValue("project_ref", $project_ref);
                        $stmt->bindValue("project_id", $project_id);  
                        $stmt->bindValue("description",$ei_view->getElementsByTagName("description")->item(0)->nodeValue); 
                        $stmt->bindValue("is_active", $ei_view->getElementsByTagName("is_active")->item(0)->nodeValue); 
                        $stmt->execute(array()); 
                }
            } 
            }
        }
        return null;
    }
}