<?php

/**
 * EiProjectParamTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiProjectParamTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiProjectParamTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiProjectParam');
    }
    
    //Rechargement des éléments de type EiProjectParam pour un projet 
    public function reload($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
 
        $items = $projets->getElementsByTagName("ei_global_params");
        if ($items->length > 0) {//ya t-il des éléments à traiter?
            $ei_global_params = $items->item(0)->getElementsByTagName("ei_global_param");


            if($ei_global_params->length > 0){
                $stmt = $conn->prepare("INSERT INTO ei_project_param (param_id, project_id, project_ref, name, description,param_type,param_visibility,ei_table_name,ei_column_name,created_at,updated_at) "
                        . "VALUES (:param_id, :project_id, :project_ref, :name, :description, :param_type,:param_visibility,:ei_table_name,:ei_column_name,:created_at,:updated_at) "
                        . "ON DUPLICATE KEY UPDATE param_id=param_id,project_id=:project_id,project_ref=:project_ref,name=:name,description=:description,param_type=:param_type,param_visibility=:param_visibility,ei_table_name=:ei_table_name,ei_column_name=:ei_column_name,created_at=:created_at, updated_at=:updated_at");

                foreach ($ei_global_params as $ei_global_param) {
                    
                    $param_id = $ei_global_param->getAttribute("param_id");
                    //recherche du paramètre en base
                    if ($param_id != null) {   
                        $stmt->bindValue("param_id", $param_id);
                        $stmt->bindValue("project_id", $project_id);
                        $stmt->bindValue("project_ref", $project_ref);
                        $stmt->bindValue("name", $ei_global_param->getElementsByTagName("name")->item(0)->nodeValue);
                        $stmt->bindValue("description", $ei_global_param->getElementsByTagName("description")->item(0)->nodeValue);
                        $stmt->bindValue("param_type", $ei_global_param->getElementsByTagName("param_type")->item(0)->nodeValue);
                        $stmt->bindValue("param_visibility", $ei_global_param->getElementsByTagName("param_visibility")->item(0)->nodeValue);
                        $stmt->bindValue("ei_table_name", $ei_global_param->getElementsByTagName("ei_table_name")->item(0)->nodeValue);
                        $stmt->bindValue("ei_column_name", $ei_global_param->getElementsByTagName("ei_column_name")->item(0)->nodeValue);
                        $stmt->bindValue("created_at", $ei_global_param->getElementsByTagName("created_at")->item(0)->nodeValue);
                        $stmt->bindValue("updated_at", $ei_global_param->getElementsByTagName("updated_at")->item(0)->nodeValue);
                        $stmt->execute(array());
                    }
                } 
                return 1;
            }
            return null;
        }
    }
    
    /* Suppression des paramètres globaux  d'un projet donné   */
    public function deleteProjectParams($project_id, $project_ref ,  Doctrine_Connection $conn = null){ 
        if ($conn == null)  $conn = Doctrine_Manager::connection();
            $conn->getTable('EiProjectParam')->createQuery('pp')
                ->delete()
                ->where('pp.project_id=? And pp.project_ref=?',
                        array($project_id,$project_ref)) 
                ->execute(); 
    }
}