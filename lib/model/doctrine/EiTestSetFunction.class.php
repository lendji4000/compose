<?php

/**
 * EiTestSetFunction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kalifastRobot
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EiTestSetFunction extends BaseEiTestSetFunction {

    /**
     * @return string
     */
    public static function getDefaultPath(){
        return "/Root[1]";
    }

    /**
     * @return mixed
     */
    public function getPath(){
        return str_replace("/Root", self::getDefaultPath(), str_replace("/Root[1]", "/Root", $this->getXpath()));
    }

    /**
     * @param DOMNode $functionTag
     * @param int $position
     * @param EiIteration $iteration
     */
    public function generateFromXML(DOMNode $functionTag, $position = 0, EiIteration $iteration = null) {
        $this->setXpath($functionTag->getAttribute('xpath'));
        $this->setFunctionId($functionTag->getAttribute('function_id'));
        $this->setFunctionRef($functionTag->getAttribute('function_ref'));
        $this->setEiFonctionId($functionTag->getAttribute('ei_fonction_id'));
        $this->setPosition($position);

        if ($functionTag->hasChildNodes() && $functionTag->firstChild->nodeName == 'parameters') {
            $params = new Doctrine_Collection('EiTestSetParam');
            foreach ($functionTag->firstChild->childNodes as $paramNode) {
                $param = new EiTestSetParam();
                $param->setValeur($paramNode->nodeValue);
                $param->setParamId($paramNode->getAttribute('param_id'));
                $param->setFunctionId($this->getFunctionId());
                $param->setFunctionRef($this->getFunctionRef());
                $param->setEiTestSetFunction($this);
                $param->setEiTestSet($this->getEiTestSet());
                $param->setEiIteration($iteration);
                $params->add($param);
            }
            $this->setEiTestSetParams($params);
        }
    }

    public function getEiFonction() {
        return Doctrine_Core::getTable('EiFonction')->find($this->getEiFonctionId());
    }

}
