<?php

/**
 * EiIteration
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kalifastRobot
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EiIteration extends BaseEiIteration
{
    public function save(\Doctrine_Connection $conn = null) { 
        if($this->isNew()){
            parent::save($conn);
            $this->setAsDefault(); //On sauvegarde l'itération comme itération par défaut
        } 
        else{
            parent::save($conn);
        }
        
    }
    /* Set itération as default for project and profile */
    public function setAsDefault(Doctrine_Connection $conn = null){
        if ($conn == null)
            $conn = Doctrine_Manager::connection(); 
        /* Recherche du couple project-profile dans la table des itérations actives */
        $activeItLink=Doctrine_Core::getTable("EiActiveIteration")->findOneByProjectIdAndProjectRefAndProfileIdAndProfileRef(
                $this->getProjectId(),$this->getProjectRef(),$this->getProfileId(),$this->getProfileRef());
        /* Si un lien existe déjà , on le mets à jour en remplacant l'id de l'itération: Sinon on en crèe un */
        if($activeItLink!=null):
            $activeItLink->setIterationId($this->getId());
            $activeItLink->save($conn);
        else:  
            $this->getTable()->saveActiveIteration($this->getId(),$this->getProject(),$this->getProfile(),$conn); 
        endif;
        return true;
    }
    /*On vérifie si l'itération est celle active pour le projet */
    public function isActiveIteration(){
        $active_iteration= Doctrine_Core::getTable('EiActiveIteration')->findOneByProjectIdAndProjectRefAndProfileIdAndProfileRefAndIterationId(
                $this->project_id,$this->project_ref,$this->profile_id,$this->profile_ref,$this->getId());
        return ($active_iteration!=null?true:false);
    }
    //Récupération du projet correspondant à  l'itération
  public function getProject(){
      return Doctrine_Core::getTable('EiProjet')->findOneByProjectIdAndRefId($this->getProjectId(),$this->getProjectRef());
  }
  //Récupération du profil correspondant à l'itération
  public function getProfile(){
      return Doctrine_Core::getTable('EiProfil')->findOneByProfileIdAndProfileRef($this->getProfileId(),$this->getProfileRef());
  } 
  /*Definition du projet  d'une itération */
  public function setEiProject(EiProjet $ei_project){
      $this->setProjectId($ei_project->getProjectId());
      $this->setProjectRef($ei_project->getRefId());
  }
  /*Definition du profil  d'une itération */
  public function setEiProfile(EiProfil $ei_profile){
      $this->setProfileId($ei_profile->getProfileId());
      $this->setProfileRef($ei_profile->getProfileRef());
  }

  public function asArray(){
      $guard_user=$this->getSfGuardUser(); //Récupération de l'utiliateur 
      
      return array(
          'iteration_id' => $this->getId(),
          'delivery_id' => $this->getDeliveryId(),
          'profile_id' => $this->getProfileId(),
          'profile_ref' => $this->getProfileRef(),
          'project_id' => $this->getProjectId(),
          'project_ref' => $this->getProjectRef(),
          'description' => $this->getDescription(),
          'username' => ($guard_user!=null?$guard_user->getUsername():""),
          'created_at' => $this->getCreatedAt(),
          'updated_at' => $this->getUpdatedAt(),
          'is_active' => $this->isActiveIteration()
      );
  }
  
}