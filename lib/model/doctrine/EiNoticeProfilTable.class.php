<?php

/**
 * EiNoticeProfilTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiNoticeProfilTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object EiNoticeProfilTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('EiNoticeProfil');
    }
 

    //Rechargement des éléments de type EiVersionNotice pour un projet 
    public function reload($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
 
        //Suppression des éléments n'existant plus coté script.kalifast
        
        $this->deleteNotFoundNoticeProfil($conn);
        $items = $projets->getElementsByTagName("ei_notice_profiles");
        if ($items->length > 0) {//ya t-il des éléments à traiter?
            $ei_notice_profiles = $items->item(0)->getElementsByTagName("ei_notice_profile");
            $stmt = $conn->prepare("INSERT INTO ei_notice_profil (notice_id,notice_ref, profile_id, profile_ref,version_notice_id) "
                            ."VALUES (:notice_id,:notice_ref, :profile_id, :profile_ref,:version_notice_id) "
                            ."ON DUPLICATE KEY UPDATE notice_id=notice_id ,notice_ref=notice_ref "); 
            
            if($ei_notice_profiles->length > 0){
                foreach ($ei_notice_profiles as $ei_notice_profile) {

                    $notice_id = $ei_notice_profile->getAttribute("notice_id");
                    $notice_ref = $ei_notice_profile->getAttribute("notice_ref");
                    $profile_id = $ei_notice_profile->getAttribute("profile_id");
                    $profile_ref = $ei_notice_profile->getAttribute("profile_ref");
                    $version_notice_id = $ei_notice_profile->getAttribute("version_notice_id"); 
                        
                    //recherche du profil en base
                    if ($notice_id != null && $notice_ref != null && $version_notice_id != null && $profile_id != null && $profile_ref != null) {
                        $stmt->bindValue("notice_id", $notice_id);
                        $stmt->bindValue("notice_ref", $notice_ref);
                        $stmt->bindValue("profile_id", $profile_id);
                        $stmt->bindValue("profile_ref", $profile_ref);
                        $stmt->bindValue("version_notice_id", $version_notice_id);  
                        $stmt->execute(array());   
                    }
                } 
                return 1;
            }
            return null;
        }
    }
    
    //Suppression des relations notice-profil inexistantes sur la plate forme de rédaction des scripts (script.kalifast.com)
    public function deleteNotFoundNoticeProfil( Doctrine_Connection $conn=null){
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        $q="
            delete FROM `ei_notice_profil` 
            WHERE 
             (version_notice_id , notice_id , notice_ref , profile_id , profile_ref) 
             Not In 
             ( select  version_notice_id , notice_id , notice_ref , profile_id , profile_ref 
               from script_ei_notice_profil where 1)
            And 

            (notice_id , notice_ref) 
             In 
            (SELECT notice_id , notice_ref  from script_ei_notice where 1 ) ";
        $conn->execute($q);
    }
    
    
    
    public function insertJsonFunction($arraytab, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //Si l'id du noeud ou du projet n'est pas renseigné 
        if (!isset($arraytab['n_id']) || !isset($arraytab['n_ref']) || !isset($arraytab['np_vn_id']) || !isset($arraytab['sv_pid']) || !isset($arraytab['sv_pref']))
            return null;
        $stmt = $conn->prepare("INSERT INTO ei_notice_profil (notice_id,notice_ref, profile_id, profile_ref,version_notice_id,created_at,updated_at) "
                . "VALUES (:notice_id,:notice_ref, :profile_id, :profile_ref,:version_notice_id,:created_at,:updated_at) "
                . "ON DUPLICATE KEY UPDATE notice_id=notice_id ,notice_ref=notice_ref ,created_at=:created_at,updated_at=:updated_at");
        
        $stmt->bindValue("notice_id", $arraytab['n_id']);
        $stmt->bindValue("notice_ref", $arraytab['n_ref']);
        $stmt->bindValue("profile_id", $arraytab['sv_pid']);
        $stmt->bindValue("profile_ref", $arraytab['sv_pref']);
        $stmt->bindValue("version_notice_id", $arraytab['np_vn_id']);
        $stmt->bindValue("created_at", $arraytab['np_creat']);
        $stmt->bindValue("updated_at", $arraytab['np_updat']);
        $stmt->execute(array());
        return 1;
    }

}