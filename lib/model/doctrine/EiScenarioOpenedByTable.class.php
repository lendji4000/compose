<?php

/**
 * EiScenarioOpenedByTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiScenarioOpenedByTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiScenarioOpenedByTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiScenarioOpenedBy');
    }
    
    public function setOpenedBy($ei_scenario_id, $user){
        $noeud = self::getInstance()
                ->findOneByEiScenarioIdAndUserIdAndRefId($ei_scenario_id, $user->getUserId(), $user->getRefId());
        
        if($noeud == null){
            $noeud = new EiScenarioOpenedBy();
            $noeud->setEiScenarioId($ei_scenario_id);
            $noeud->setUserId($user->getUserId());
            $noeud->setRefId($user->getRefId());
            $noeud->save();
        }
        
        return $noeud;
    }
    
    public function getLastOpened($user, $limit = 10){
        $lastOpened = self::getInstance()->createQuery('opened')
                ->leftJoin('opened.EiScenario scr')
                ->where("opened.user_id = ?", $user->getUserId())
                ->andWhere('opened.ref_id = ?', $user->getRefId())
                ->limit($limit)
                ->fetchArray();
        return $lastOpened;
    }
    
    /*
     * Récupération des scénarios récemment ouverts pour le projet courant
     */
    public function getLastOpenedForCurrentProject($user,$project_id,$project_ref, $limit = 10){
        if($user==null || $project_id==null || $project_ref==null) return array();
        $lastOpened = self::getInstance()->createQuery('opened')
                ->leftJoin('opened.EiScenario scr')
                ->where("opened.user_id = ?", $user->getUserId())
                ->andWhere('opened.ref_id = ?', $user->getRefId())
                ->andWhere('scr.project_id= ? And scr.project_ref=?',array(
                    $project_id,$project_ref
                ))
                ->limit($limit)
                ->fetchArray();
        return $lastOpened;
    }
}