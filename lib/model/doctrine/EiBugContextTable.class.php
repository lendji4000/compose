<?php

/**
 * EiBugContextTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiBugContextTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiBugContextTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiBugContext');
    }
    //Récupération des contextes d'un sujet/intervention
    public function getSubjectContexts($subject_id,Doctrine_Connection $conn=null){
        if($conn==null) $conn = Doctrine_Manager::connection(); 
        if($subject_id==null) return array();
        return  $conn->createQuery()->from('EiBugContext bc')
                ->where('bc.subject_id = '.$subject_id)
                ->execute(); 
    }
    //Récupération d'un contexte avec ses propriétés de base 
    public function getContext($context_id,Doctrine_Connection $conn=null){
        if($conn==null) $conn = Doctrine_Manager::connection(); 
        $q=$this->getContexts($conn);
        $s=$q->Where('bc.id='.$context_id)
                ->execute();
        if(count($s)>0) return $s->getFirst();
        return null;
    }
    //Récupération de la requête pour la liste des contextes  
    public function getContexts(Doctrine_Connection $conn=null ){
        if($conn==null) $conn = Doctrine_Manager::connection(); 
     return  $conn->createQuery()->from('EiBugContext bc')
             ->leftJoin('bc.bugContextAuthor a') // créateur du contexte
             ->leftJoin('bc.bugContextDelivery d') //livraison du contexte
             ->leftJoin('bc.bugContextCampaignStep cg') //Step de la campagne associée 
             ->leftJoin('bc.bugContextSubject s') //Sujet associé au contexte
             ->leftJoin('bc.bugContextScenario sc') //scénario associé au contexte
             ->leftJoin('bc.bugContextTestSet ts') //Jeu de test associé au contexte
             ->leftJoin('bc.bugContextJdd jdd') //Jeu de données du contexte
             ->leftJoin('bc.bugContextFunction f') //FOnction ayant planté et entrainée
             ;  
    }
}