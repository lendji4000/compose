<?php

/**
 * ScriptEiFunctionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiFunctionTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiFunctionTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('ScriptEiFunction');
    }

    //Avec l'objet conn pour pouvoir intégrer la fonction à une transaction
    //Réchargement des données ScriptEiFunction

    public function insertTmpData($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_function");

        $items = $projets->getElementsByTagName("ei_functions");
        if ($items->length !=0) {//ya t-il des éléments à traiter?
            $values="";
            $ei_functions = $items->item(0)->getElementsByTagName("ei_function");

            if($ei_functions->length !=0){
            //Création de la collection d'objets à ajouter dans la table temporaire de paramètres
            foreach ($ei_functions as $ei_function) {

                $function_id = $ei_function->getAttribute("function_id");
                $function_ref = $ei_function->getAttribute("function_ref");
                //recherche du profil en base
                if ($function_id != null && $function_ref!= null) {
                    $values.="('" .$function_ref. "',
                               '" . $function_id. "',
                               '" . $project_ref. "',
                               '" . $project_id. "',
                               " . $conn->quote($ei_function->getElementsByTagName("description")->item(0)->nodeValue). ",
                               '" . $ei_function->getElementsByTagName("is_active")->item(0)->nodeValue. "' ),";
                }
            }
            //On procède par sql brute pour éviter des allocations mémoires lourdes au serveur
                $values=substr($values, 0, -1); //On retire la dernière virgule
                if(strlen($values) >2 )//Si la chaine n'est pas vide
                    $conn->execute(
                                "INSERT INTO script_ei_function 
                            (function_ref, function_id, project_ref,project_id,description,is_active) 
                             VALUES " . $values . " "); 
            }
        }
        return null;
    }

}
