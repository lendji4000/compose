<?php

/**
 * EiView
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kalifastRobot
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EiView extends BaseEiView {

    //Récupération de la vue dans l'arbre
    public function getNodeTree() {
        return Doctrine_Core::getTable('EiTree')->findOneByRefObjAndObjIdAndType($this->getViewRef(), $this->getViewId(), 'View');
    }

    /* Création d'une vue sur la plate forme centrale */

    public static function createDistantView(EiProjet $ei_project, EiTree $ei_parent_tree, $data, Doctrine_Connection $conn = null) {
        $result_file = new DOMDocument();
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        try {
            
            $conn->beginTransaction(); //Début de la transaction
            //$result_file = new DOMDocument();
            //Appel du webservice  
            $result_update = MyFunction::loadResultOfWebServiceByPostJson(
                            MyFunction::getPrefixPath(null) . "/serviceweb/project/view/create.json", array('project_id' => $ei_project->getProjectId(),
                        'project_ref' => $ei_project->getRefId(),
                        'parent_id' => $ei_parent_tree->getId(),
                        'data' => $data));
            $array_result= json_decode(html_entity_decode($result_update) ,true);  
            //Récupération de la vue  pour traitement
            if (count($array_result) == 0)  return false;
             
            if (array_key_exists("error", $array_result) ):
                return false;
            endif;
            if (!$array_result[0]):
                return false;
            endif;
             
            
            //Rechargement d'une vuew 
                EiView::reload($array_result,$conn); 
                $conn->commit();
                return true; 
        } catch (Exception $e) {
            $conn->rollback();
            //return false;
            throw $e;
        }
    }

     //Rechargement d'une vue
    public static function reload($array_result,$conn){      
        if(count($array_result)>0): //var_dump($array_result);
            Doctrine_Core::getTable("EiView")->insertJsonFunction($array_result[0],$conn); //Chargement de la vue
            Doctrine_Core::getTable("EiTree")->insertJsonFunction($array_result[0],"EiView",$conn); //Chargement du noeud associé 
            /* Mise à jour du delta projet */ 
            $conn->execute("update ei_projet set version_courante=".$array_result[0]['p_vers']." , version_kalifast=".$array_result[0]['p_vers']." , updated_at='".$array_result[0]['p_updat']."'  
                    where project_id=".$array_result[0]['p_id']." and ref_id=".$array_result[0]['p_ref']); 
        endif;
    }

}
