<?php

/**
 * ScriptEiScriptTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiScriptTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiScriptTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('ScriptEiScript');
    }
 
    public function insertTmpData($projets,$project_id, $project_ref, Doctrine_Connection $conn = null) {
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_script");

        $items = $projets->getElementsByTagName("ei_scripts");
        if ($items->length !=0) {//ya t-il des éléments à traiter?
            $ei_scripts = $items->item(0)->getElementsByTagName("ei_script");
            $stmt = $conn->prepare("INSERT INTO script_ei_script (script_id, ticket_id, ticket_ref,function_id,function_ref,num_version,description,remark) "
                            ."VALUES (:script_id, :ticket_id, :ticket_ref,:function_id,:function_ref,:num_version,:description,:remark) "
                            ."ON DUPLICATE KEY UPDATE script_id=script_id");
            if($ei_scripts->length !=0){
            //Création de la collection d'objets à ajouter dans la table temporaire de paramètres
            $collection_tmp_script = new Doctrine_Collection('ScriptEiScript');
            foreach ($ei_scripts as $ei_script) {

                $script_id = $ei_script->getAttribute("script_id");
                //recherche du profil en base
                if ($script_id != null ) { 
                    $stmt->bindValue("script_id", $script_id);
                        $stmt->bindValue("ticket_id", $ei_script->getElementsByTagName("ticket_id")->item(0)->nodeValue);
                        $stmt->bindValue("ticket_ref", $ei_script->getElementsByTagName("ticket_ref")->item(0)->nodeValue);
                        $stmt->bindValue("function_id", $ei_script->getElementsByTagName("function_id")->item(0)->nodeValue);  
                        $stmt->bindValue("function_ref",$ei_script->getElementsByTagName("function_ref")->item(0)->nodeValue);  
                        $stmt->bindValue("num_version", $ei_script->getElementsByTagName("num_version")->item(0)->nodeValue);
                        $stmt->bindValue("description", $ei_script->getElementsByTagName("description")->item(0)->nodeValue);
                        $stmt->bindValue("remark", $ei_script->getElementsByTagName("remark")->item(0)->nodeValue);   
                        $stmt->execute(array());  
                }
            } 
            }
        }
        return null;
    }

}