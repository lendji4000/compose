<?php

/**
 * EiPackageFunctionConflictTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EiPackageFunctionConflictTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EiPackageFunctionConflictTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EiPackageFunctionConflict');
    }
    public function createItem(KalFunction $kal_function,EiDelivery $ei_delivery,EiTicket $ei_ticket,sfGuardUser $guard_user,Doctrine_Connection $conn = null){
        
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        $stmt = $conn->prepare("INSERT INTO ei_package_function_conflict (function_id, function_ref,delivery_id,package_id, package_ref,resolved_date,resolved_author,created_at,updated_at) "
                            ."VALUES (:function_id, :function_ref,:delivery_id,:package_id, :package_ref,:resolved_date,:resolved_author,:created_at,:updated_at) "
                            ."ON DUPLICATE KEY UPDATE function_id=function_id, function_ref=function_ref , delivery_id=delivery_id, package_id=:package_id, package_ref=:package_ref");  
                    $stmt->bindValue("function_id", $kal_function->getFunctionId());
                    $stmt->bindValue("function_ref", $kal_function->getFunctionRef());
                    $stmt->bindValue("delivery_id",$ei_delivery->getId());
                    $stmt->bindValue("package_id", $ei_ticket->getTicketId());
                    $stmt->bindValue("package_ref", $ei_ticket->getTicketRef());
                    $stmt->bindValue("resolved_date", date('Y-m-d H:i:s'));
                    $stmt->bindValue("resolved_author", $guard_user->getId());
                    $stmt->bindValue("created_at", date('Y-m-d H:i:s'));
                    $stmt->bindValue("updated_at", date('Y-m-d H:i:s')); 
                    $stmt->execute(array());
    }
}