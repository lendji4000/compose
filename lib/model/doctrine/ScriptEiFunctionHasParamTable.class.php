<?php

/**
 * ScriptEiFunctionHasParamTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScriptEiFunctionHasParamTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScriptEiFunctionHasParamTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScriptEiFunctionHasParam');
    }
    
    public function emptyTmpTable(Doctrine_Connection $conn=null){
        //On vide la table temporaire avant toute opération  
        $conn->execute("TRUNCATE TABLE script_ei_function_has_param");
    }
    
    //Charegement des données de la table temporaire
    public function insertTmpData($ei_function_has_params, Doctrine_Connection $conn=null){
        if ($conn == null)
            $conn = Doctrine_Manager::connection();
        //On vide la table temporaire avant toute opération 
        $conn->execute("TRUNCATE TABLE script_ei_function_has_param");
        $stmt = $conn->prepare("INSERT INTO script_ei_function_has_param (param_id, function_id, function_ref,param_type,name,description,default_value,is_compulsory) "
                            ."VALUES (:param_id, :function_id, :function_ref,:param_type,:name,:description,:default_value,:is_compulsory) "
                            ."ON DUPLICATE KEY UPDATE param_id=param_id  ");
        //Création de la collection d'objets à ajouter dans la table temporaire de paramètres 
        if($ei_function_has_params->length !=0){
            foreach ($ei_function_has_params as $ei_function_has_param) {
                    
                    $param_id = $ei_function_has_param->getAttribute("param_id"); 
                    //recherche du paramètre  en base
                    if ($param_id != null) {  
                        $stmt->bindValue("param_id", $param_id);
                        $stmt->bindValue("function_id", $ei_function_has_param->getElementsByTagName("function_id")->item(0)->nodeValue);
                        $stmt->bindValue("function_ref", $ei_function_has_param->getElementsByTagName("function_id")->item(0)->nodeValue);
                        $stmt->bindValue("param_type", $ei_function_has_param->getElementsByTagName("function_ref")->item(0)->nodeValue);
                        $stmt->bindValue("name", $ei_function_has_param->getElementsByTagName("name")->item(0)->nodeValue);  
                        $stmt->bindValue("description", $ei_function_has_param->getElementsByTagName("description")->item(0)->nodeValue);
                        $stmt->bindValue("default_value", $ei_function_has_param->getElementsByTagName("default_value")->item(0)->nodeValue);
                        $stmt->bindValue("is_compulsory", $ei_function_has_param->getElementsByTagName("is_compulsory")->item(0)->nodeValue);
                        $stmt->execute(array());
                    }
                    
                } 
        }
    }
}